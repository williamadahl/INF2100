   1: # Finn 1. påskedag for årene 2015-2020.
   2: 
   3: M_name = [""] * (12+1)
Scanner: name token on line 3: M_name
Scanner: = token on line 3
Scanner: [ token on line 3
Scanner: string literal token on line 3: ""
Scanner: ] token on line 3
Scanner: * token on line 3
Scanner: ( token on line 3
Scanner: integer literal token on line 3: 12
Scanner: + token on line 3
Scanner: integer literal token on line 3: 1
Scanner: ) token on line 3
Scanner: NEWLINE token on line 3
   4: M_name[3] = "mars"
Scanner: name token on line 4: M_name
Scanner: [ token on line 4
Scanner: integer literal token on line 4: 3
Scanner: ] token on line 4
Scanner: = token on line 4
Scanner: string literal token on line 4: "mars"
Scanner: NEWLINE token on line 4
   5: M_name[4] = "april"
Scanner: name token on line 5: M_name
Scanner: [ token on line 5
Scanner: integer literal token on line 5: 4
Scanner: ] token on line 5
Scanner: = token on line 5
Scanner: string literal token on line 5: "april"
Scanner: NEWLINE token on line 5
   6: 
   7: y = 2015
Scanner: name token on line 7: y
Scanner: = token on line 7
Scanner: integer literal token on line 7: 2015
Scanner: NEWLINE token on line 7
   8: while y <= 2020:
Scanner: while token on line 8
Scanner: name token on line 8: y
Scanner: <= token on line 8
Scanner: integer literal token on line 8: 2020
Scanner: : token on line 8
Scanner: NEWLINE token on line 8
   9:    a = y % 19
Scanner: INDENT token on line 9
Scanner: name token on line 9: a
Scanner: = token on line 9
Scanner: name token on line 9: y
Scanner: % token on line 9
Scanner: integer literal token on line 9: 19
Scanner: NEWLINE token on line 9
  10:    b = y // 100
Scanner: name token on line 10: b
Scanner: = token on line 10
Scanner: name token on line 10: y
Scanner: // token on line 10
Scanner: integer literal token on line 10: 100
Scanner: NEWLINE token on line 10
  11:    c = y % 100
Scanner: name token on line 11: c
Scanner: = token on line 11
Scanner: name token on line 11: y
Scanner: % token on line 11
Scanner: integer literal token on line 11: 100
Scanner: NEWLINE token on line 11
  12:    d = b // 4
Scanner: name token on line 12: d
Scanner: = token on line 12
Scanner: name token on line 12: b
Scanner: // token on line 12
Scanner: integer literal token on line 12: 4
Scanner: NEWLINE token on line 12
  13:    e = b % 4
Scanner: name token on line 13: e
Scanner: = token on line 13
Scanner: name token on line 13: b
Scanner: % token on line 13
Scanner: integer literal token on line 13: 4
Scanner: NEWLINE token on line 13
  14:    f = (b+8) // 25
Scanner: name token on line 14: f
Scanner: = token on line 14
Scanner: ( token on line 14
Scanner: name token on line 14: b
Scanner: + token on line 14
Scanner: integer literal token on line 14: 8
Scanner: ) token on line 14
Scanner: // token on line 14
Scanner: integer literal token on line 14: 25
Scanner: NEWLINE token on line 14
  15:    g = (b-f+1) // 3
Scanner: name token on line 15: g
Scanner: = token on line 15
Scanner: ( token on line 15
Scanner: name token on line 15: b
Scanner: - token on line 15
Scanner: name token on line 15: f
Scanner: + token on line 15
Scanner: integer literal token on line 15: 1
Scanner: ) token on line 15
Scanner: // token on line 15
Scanner: integer literal token on line 15: 3
Scanner: NEWLINE token on line 15
  16:    h = (19*a+b-d-g+15) % 30
Scanner: name token on line 16: h
Scanner: = token on line 16
Scanner: ( token on line 16
Scanner: integer literal token on line 16: 19
Scanner: * token on line 16
Scanner: name token on line 16: a
Scanner: + token on line 16
Scanner: name token on line 16: b
Scanner: - token on line 16
Scanner: name token on line 16: d
Scanner: - token on line 16
Scanner: name token on line 16: g
Scanner: + token on line 16
Scanner: integer literal token on line 16: 15
Scanner: ) token on line 16
Scanner: % token on line 16
Scanner: integer literal token on line 16: 30
Scanner: NEWLINE token on line 16
  17:    i = c // 4
Scanner: name token on line 17: i
Scanner: = token on line 17
Scanner: name token on line 17: c
Scanner: // token on line 17
Scanner: integer literal token on line 17: 4
Scanner: NEWLINE token on line 17
  18:    k = c % 4
Scanner: name token on line 18: k
Scanner: = token on line 18
Scanner: name token on line 18: c
Scanner: % token on line 18
Scanner: integer literal token on line 18: 4
Scanner: NEWLINE token on line 18
  19:    l = (32+2*e+2*i-h-k) % 7
Scanner: name token on line 19: l
Scanner: = token on line 19
Scanner: ( token on line 19
Scanner: integer literal token on line 19: 32
Scanner: + token on line 19
Scanner: integer literal token on line 19: 2
Scanner: * token on line 19
Scanner: name token on line 19: e
Scanner: + token on line 19
Scanner: integer literal token on line 19: 2
Scanner: * token on line 19
Scanner: name token on line 19: i
Scanner: - token on line 19
Scanner: name token on line 19: h
Scanner: - token on line 19
Scanner: name token on line 19: k
Scanner: ) token on line 19
Scanner: % token on line 19
Scanner: integer literal token on line 19: 7
Scanner: NEWLINE token on line 19
  20:    m = (a+11*h+22*l) // 451
Scanner: name token on line 20: m
Scanner: = token on line 20
Scanner: ( token on line 20
Scanner: name token on line 20: a
Scanner: + token on line 20
Scanner: integer literal token on line 20: 11
Scanner: * token on line 20
Scanner: name token on line 20: h
Scanner: + token on line 20
Scanner: integer literal token on line 20: 22
Scanner: * token on line 20
Scanner: name token on line 20: l
Scanner: ) token on line 20
Scanner: // token on line 20
Scanner: integer literal token on line 20: 451
Scanner: NEWLINE token on line 20
  21: 
  22:    month = (h+l-7*m+114) // 31
Scanner: name token on line 22: month
Scanner: = token on line 22
Scanner: ( token on line 22
Scanner: name token on line 22: h
Scanner: + token on line 22
Scanner: name token on line 22: l
Scanner: - token on line 22
Scanner: integer literal token on line 22: 7
Scanner: * token on line 22
Scanner: name token on line 22: m
Scanner: + token on line 22
Scanner: integer literal token on line 22: 114
Scanner: ) token on line 22
Scanner: // token on line 22
Scanner: integer literal token on line 22: 31
Scanner: NEWLINE token on line 22
  23:    day = (h+l-7*m+114) % 31 + 1
Scanner: name token on line 23: day
Scanner: = token on line 23
Scanner: ( token on line 23
Scanner: name token on line 23: h
Scanner: + token on line 23
Scanner: name token on line 23: l
Scanner: - token on line 23
Scanner: integer literal token on line 23: 7
Scanner: * token on line 23
Scanner: name token on line 23: m
Scanner: + token on line 23
Scanner: integer literal token on line 23: 114
Scanner: ) token on line 23
Scanner: % token on line 23
Scanner: integer literal token on line 23: 31
Scanner: + token on line 23
Scanner: integer literal token on line 23: 1
Scanner: NEWLINE token on line 23
  24:    print(str(day) + ". " + M_name[month], y)
Scanner: name token on line 24: print
Scanner: ( token on line 24
Scanner: name token on line 24: str
Scanner: ( token on line 24
Scanner: name token on line 24: day
Scanner: ) token on line 24
Scanner: + token on line 24
Scanner: string literal token on line 24: ". "
Scanner: + token on line 24
Scanner: name token on line 24: M_name
Scanner: [ token on line 24
Scanner: name token on line 24: month
Scanner: ] token on line 24
Scanner: , token on line 24
Scanner: name token on line 24: y
Scanner: ) token on line 24
Scanner: NEWLINE token on line 24
  25: 
  26:    y = y+1
Scanner: name token on line 26: y
Scanner: = token on line 26
Scanner: name token on line 26: y
Scanner: + token on line 26
Scanner: integer literal token on line 26: 1
Scanner: NEWLINE token on line 26
Scanner: E-o-f token
