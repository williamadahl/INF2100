<program>
   1: 
   2: # Finn alle primtall opp til n
   3: # ved hjelp av teknikken kalt «Eratosthenes' sil».
   4: 
   5: n = 1000
  <stmt>
    <assignment>
      <name>
      </name>
      <expr>
        <and test>
          <not test>
            <comparison>
              <term>
                <factor>
                  <primary>
                    <atom>
                      <integer literal>
                      </integer literal>
                    </atom>
                  </primary>
                </factor>
              </term>
            </comparison>
          </not test>
        </and test>
      </expr>
    </assignment>
  </stmt>
   6: primes = [True] * (n+1)
  <stmt>
    <assignment>
      <name>
      </name>
      <expr>
        <and test>
          <not test>
            <comparison>
              <term>
                <factor>
                  <primary>
                    <atom>
                      <list display>
                        <expr>
                          <and test>
                            <not test>
                              <comparison>
                                <term>
                                  <factor>
                                    <primary>
                                      <atom>
                                        <boolean literal>
                                        </boolean literal>
                                      </atom>
                                    </primary>
                                  </factor>
                                </term>
                              </comparison>
                            </not test>
                          </and test>
                        </expr>
                      </list display>
                    </atom>
                  </primary>
                  <factor opr>
                  </factor opr>
                  <primary>
                    <atom>
                      <inner expr>
                        <expr>
                          <and test>
                            <not test>
                              <comparison>
                                <term>
                                  <factor>
                                    <primary>
                                      <atom>
                                        <name>
                                        </name>
                                      </atom>
                                    </primary>
                                  </factor>
                                  <term opr>
                                  </term opr>
                                  <factor>
                                    <primary>
                                      <atom>
                                        <integer literal>
                                        </integer literal>
                                      </atom>
                                    </primary>
                                  </factor>
                                </term>
                              </comparison>
                            </not test>
                          </and test>
                        </expr>
                      </inner expr>
                    </atom>
                  </primary>
                </factor>
              </term>
            </comparison>
          </not test>
        </and test>
      </expr>
    </assignment>
  </stmt>
   7: 
   8: def find_primes():
  <stmt>
    <func def>
      <name>
      </name>
      <suite>
   9:    i1 = 2
        <stmt>
          <assignment>
            <name>
            </name>
            <expr>
              <and test>
                <not test>
                  <comparison>
                    <term>
                      <factor>
                        <primary>
                          <atom>
                            <integer literal>
                            </integer literal>
                          </atom>
                        </primary>
                      </factor>
                    </term>
                  </comparison>
                </not test>
              </and test>
            </expr>
          </assignment>
        </stmt>
  10:    while i1 <= n:
        <stmt>
          <while stmt>
            <expr>
              <and test>
                <not test>
                  <comparison>
                    <term>
                      <factor>
                        <primary>
                          <atom>
                            <name>
                            </name>
                          </atom>
                        </primary>
                      </factor>
                    </term>
                    <comp opr>
                    </comp opr>
                    <term>
                      <factor>
                        <primary>
                          <atom>
                            <name>
                            </name>
                          </atom>
                        </primary>
                      </factor>
                    </term>
                  </comparison>
                </not test>
              </and test>
            </expr>
            <suite>
  11:       i2 = 2 * i1
              <stmt>
                <assignment>
                  <name>
                  </name>
                  <expr>
                    <and test>
                      <not test>
                        <comparison>
                          <term>
                            <factor>
                              <primary>
                                <atom>
                                  <integer literal>
                                  </integer literal>
                                </atom>
                              </primary>
                              <factor opr>
                              </factor opr>
                              <primary>
                                <atom>
                                  <name>
                                  </name>
                                </atom>
                              </primary>
                            </factor>
                          </term>
                        </comparison>
                      </not test>
                    </and test>
                  </expr>
                </assignment>
              </stmt>
  12:       while i2 <= n:
              <stmt>
                <while stmt>
                  <expr>
                    <and test>
                      <not test>
                        <comparison>
                          <term>
                            <factor>
                              <primary>
                                <atom>
                                  <name>
                                  </name>
                                </atom>
                              </primary>
                            </factor>
                          </term>
                          <comp opr>
                          </comp opr>
                          <term>
                            <factor>
                              <primary>
                                <atom>
                                  <name>
                                  </name>
                                </atom>
                              </primary>
                            </factor>
                          </term>
                        </comparison>
                      </not test>
                    </and test>
                  </expr>
                  <suite>
  13:          primes[i2] = False
                    <stmt>
                      <assignment>
                        <name>
                        </name>
                        <subscription>
                          <expr>
                            <and test>
                              <not test>
                                <comparison>
                                  <term>
                                    <factor>
                                      <primary>
                                        <atom>
                                          <name>
                                          </name>
                                        </atom>
                                      </primary>
                                    </factor>
                                  </term>
                                </comparison>
                              </not test>
                            </and test>
                          </expr>
                        </subscription>
                        <expr>
                          <and test>
                            <not test>
                              <comparison>
                                <term>
                                  <factor>
                                    <primary>
                                      <atom>
                                        <boolean literal>
                                        </boolean literal>
                                      </atom>
                                    </primary>
                                  </factor>
                                </term>
                              </comparison>
                            </not test>
                          </and test>
                        </expr>
                      </assignment>
                    </stmt>
  14:          i2 = i2 + i1
                    <stmt>
                      <assignment>
                        <name>
                        </name>
                        <expr>
                          <and test>
                            <not test>
                              <comparison>
                                <term>
                                  <factor>
                                    <primary>
                                      <atom>
                                        <name>
                                        </name>
                                      </atom>
                                    </primary>
                                  </factor>
                                  <term opr>
                                  </term opr>
                                  <factor>
                                    <primary>
                                      <atom>
                                        <name>
                                        </name>
                                      </atom>
                                    </primary>
                                  </factor>
                                </term>
                              </comparison>
                            </not test>
                          </and test>
                        </expr>
                      </assignment>
                    </stmt>
  15:       i1 = i1+1
                  </suite>
                </while stmt>
              </stmt>
              <stmt>
                <assignment>
                  <name>
                  </name>
                  <expr>
                    <and test>
                      <not test>
                        <comparison>
                          <term>
                            <factor>
                              <primary>
                                <atom>
                                  <name>
                                  </name>
                                </atom>
                              </primary>
                            </factor>
                            <term opr>
                            </term opr>
                            <factor>
                              <primary>
                                <atom>
                                  <integer literal>
                                  </integer literal>
                                </atom>
                              </primary>
                            </factor>
                          </term>
                        </comparison>
                      </not test>
                    </and test>
                  </expr>
                </assignment>
              </stmt>
  16: 
  17: def w4(n):
            </suite>
          </while stmt>
        </stmt>
      </suite>
    </func def>
  </stmt>
  <stmt>
    <func def>
      <name>
      </name>
      <name>
      </name>
      <suite>
  18:     if n <= 9:
        <stmt>
          <if stmt>
            <expr>
              <and test>
                <not test>
                  <comparison>
                    <term>
                      <factor>
                        <primary>
                          <atom>
                            <name>
                            </name>
                          </atom>
                        </primary>
                      </factor>
                    </term>
                    <comp opr>
                    </comp opr>
                    <term>
                      <factor>
                        <primary>
                          <atom>
                            <integer literal>
                            </integer literal>
                          </atom>
                        </primary>
                      </factor>
                    </term>
                  </comparison>
                </not test>
              </and test>
            </expr>
            <suite>
  19:         return '   ' + str(n)
              <stmt>
                <return stmt>
                  <expr>
                    <and test>
                      <not test>
                        <comparison>
                          <term>
                            <factor>
                              <primary>
                                <atom>
                                  <string literal>
                                  </string literal>
                                </atom>
                              </primary>
                            </factor>
                            <term opr>
                            </term opr>
                            <factor>
                              <primary>
                                <atom>
                                  <name>
                                  </name>
                                </atom>
                                <primary suffix>
                                  <arguments>
                                    <expr>
                                      <and test>
                                        <not test>
                                          <comparison>
                                            <term>
                                              <factor>
                                                <primary>
                                                  <atom>
                                                    <name>
                                                    </name>
                                                  </atom>
                                                </primary>
                                              </factor>
                                            </term>
                                          </comparison>
                                        </not test>
                                      </and test>
                                    </expr>
                                  </arguments>
                                </primary suffix>
                              </primary>
                            </factor>
                          </term>
                        </comparison>
                      </not test>
                    </and test>
                  </expr>
                </return stmt>
              </stmt>
  20:     elif n <= 99:
            </suite>
            <expr>
              <and test>
                <not test>
                  <comparison>
                    <term>
                      <factor>
                        <primary>
                          <atom>
                            <name>
                            </name>
                          </atom>
                        </primary>
                      </factor>
                    </term>
                    <comp opr>
                    </comp opr>
                    <term>
                      <factor>
                        <primary>
                          <atom>
                            <integer literal>
                            </integer literal>
                          </atom>
                        </primary>
                      </factor>
                    </term>
                  </comparison>
                </not test>
              </and test>
            </expr>
            <suite>
  21:         return '  ' + str(n)
              <stmt>
                <return stmt>
                  <expr>
                    <and test>
                      <not test>
                        <comparison>
                          <term>
                            <factor>
                              <primary>
                                <atom>
                                  <string literal>
                                  </string literal>
                                </atom>
                              </primary>
                            </factor>
                            <term opr>
                            </term opr>
                            <factor>
                              <primary>
                                <atom>
                                  <name>
                                  </name>
                                </atom>
                                <primary suffix>
                                  <arguments>
                                    <expr>
                                      <and test>
                                        <not test>
                                          <comparison>
                                            <term>
                                              <factor>
                                                <primary>
                                                  <atom>
                                                    <name>
                                                    </name>
                                                  </atom>
                                                </primary>
                                              </factor>
                                            </term>
                                          </comparison>
                                        </not test>
                                      </and test>
                                    </expr>
                                  </arguments>
                                </primary suffix>
                              </primary>
                            </factor>
                          </term>
                        </comparison>
                      </not test>
                    </and test>
                  </expr>
                </return stmt>
              </stmt>
  22:     elif n <= 999:
            </suite>
            <expr>
              <and test>
                <not test>
                  <comparison>
                    <term>
                      <factor>
                        <primary>
                          <atom>
                            <name>
                            </name>
                          </atom>
                        </primary>
                      </factor>
                    </term>
                    <comp opr>
                    </comp opr>
                    <term>
                      <factor>
                        <primary>
                          <atom>
                            <integer literal>
                            </integer literal>
                          </atom>
                        </primary>
                      </factor>
                    </term>
                  </comparison>
                </not test>
              </and test>
            </expr>
            <suite>
  23:         return ' ' + str(n)
              <stmt>
                <return stmt>
                  <expr>
                    <and test>
                      <not test>
                        <comparison>
                          <term>
                            <factor>
                              <primary>
                                <atom>
                                  <string literal>
                                  </string literal>
                                </atom>
                              </primary>
                            </factor>
                            <term opr>
                            </term opr>
                            <factor>
                              <primary>
                                <atom>
                                  <name>
                                  </name>
                                </atom>
                                <primary suffix>
                                  <arguments>
                                    <expr>
                                      <and test>
                                        <not test>
                                          <comparison>
                                            <term>
                                              <factor>
                                                <primary>
                                                  <atom>
                                                    <name>
                                                    </name>
                                                  </atom>
                                                </primary>
                                              </factor>
                                            </term>
                                          </comparison>
                                        </not test>
                                      </and test>
                                    </expr>
                                  </arguments>
                                </primary suffix>
                              </primary>
                            </factor>
                          </term>
                        </comparison>
                      </not test>
                    </and test>
                  </expr>
                </return stmt>
              </stmt>
  24:     else:
            </suite>
            <suite>
  25:         return str(n)
              <stmt>
                <return stmt>
                  <expr>
                    <and test>
                      <not test>
                        <comparison>
                          <term>
                            <factor>
                              <primary>
                                <atom>
                                  <name>
                                  </name>
                                </atom>
                                <primary suffix>
                                  <arguments>
                                    <expr>
                                      <and test>
                                        <not test>
                                          <comparison>
                                            <term>
                                              <factor>
                                                <primary>
                                                  <atom>
                                                    <name>
                                                    </name>
                                                  </atom>
                                                </primary>
                                              </factor>
                                            </term>
                                          </comparison>
                                        </not test>
                                      </and test>
                                    </expr>
                                  </arguments>
                                </primary suffix>
                              </primary>
                            </factor>
                          </term>
                        </comparison>
                      </not test>
                    </and test>
                  </expr>
                </return stmt>
              </stmt>
  26:    
  27: 
  28: def list_primes():
            </suite>
          </if stmt>
        </stmt>
      </suite>
    </func def>
  </stmt>
  <stmt>
    <func def>
      <name>
      </name>
      <suite>
  29:     n_printed = 0
        <stmt>
          <assignment>
            <name>
            </name>
            <expr>
              <and test>
                <not test>
                  <comparison>
                    <term>
                      <factor>
                        <primary>
                          <atom>
                            <integer literal>
                            </integer literal>
                          </atom>
                        </primary>
                      </factor>
                    </term>
                  </comparison>
                </not test>
              </and test>
            </expr>
          </assignment>
        </stmt>
  30:     line_buf = ''
        <stmt>
          <assignment>
            <name>
            </name>
            <expr>
              <and test>
                <not test>
                  <comparison>
                    <term>
                      <factor>
                        <primary>
                          <atom>
                            <string literal>
                            </string literal>
                          </atom>
                        </primary>
                      </factor>
                    </term>
                  </comparison>
                </not test>
              </and test>
            </expr>
          </assignment>
        </stmt>
  31:     i = 2
        <stmt>
          <assignment>
            <name>
            </name>
            <expr>
              <and test>
                <not test>
                  <comparison>
                    <term>
                      <factor>
                        <primary>
                          <atom>
                            <integer literal>
                            </integer literal>
                          </atom>
                        </primary>
                      </factor>
                    </term>
                  </comparison>
                </not test>
              </and test>
            </expr>
          </assignment>
        </stmt>
  32:     while i <= n:
        <stmt>
          <while stmt>
            <expr>
              <and test>
                <not test>
                  <comparison>
                    <term>
                      <factor>
                        <primary>
                          <atom>
                            <name>
                            </name>
                          </atom>
                        </primary>
                      </factor>
                    </term>
                    <comp opr>
                    </comp opr>
                    <term>
                      <factor>
                        <primary>
                          <atom>
                            <name>
                            </name>
                          </atom>
                        </primary>
                      </factor>
                    </term>
                  </comparison>
                </not test>
              </and test>
            </expr>
            <suite>
  33:        if primes[i]:
              <stmt>
                <if stmt>
                  <expr>
                    <and test>
                      <not test>
                        <comparison>
                          <term>
                            <factor>
                              <primary>
                                <atom>
                                  <name>
                                  </name>
                                </atom>
                                <primary suffix>
                                  <subscription>
                                    <expr>
                                      <and test>
                                        <not test>
                                          <comparison>
                                            <term>
                                              <factor>
                                                <primary>
                                                  <atom>
                                                    <name>
                                                    </name>
                                                  </atom>
                                                </primary>
                                              </factor>
                                            </term>
                                          </comparison>
                                        </not test>
                                      </and test>
                                    </expr>
                                  </subscription>
                                </primary suffix>
                              </primary>
                            </factor>
                          </term>
                        </comparison>
                      </not test>
                    </and test>
                  </expr>
                  <suite>
  34:           if n_printed > 0 and n_printed % 10 == 0:
                    <stmt>
                      <if stmt>
                        <expr>
                          <and test>
                            <not test>
                              <comparison>
                                <term>
                                  <factor>
                                    <primary>
                                      <atom>
                                        <name>
                                        </name>
                                      </atom>
                                    </primary>
                                  </factor>
                                </term>
                                <comp opr>
                                </comp opr>
                                <term>
                                  <factor>
                                    <primary>
                                      <atom>
                                        <integer literal>
                                        </integer literal>
                                      </atom>
                                    </primary>
                                  </factor>
                                </term>
                              </comparison>
                            </not test>
                            <not test>
                              <comparison>
                                <term>
                                  <factor>
                                    <primary>
                                      <atom>
                                        <name>
                                        </name>
                                      </atom>
                                    </primary>
                                    <factor opr>
                                    </factor opr>
                                    <primary>
                                      <atom>
                                        <integer literal>
                                        </integer literal>
                                      </atom>
                                    </primary>
                                  </factor>
                                </term>
                                <comp opr>
                                </comp opr>
                                <term>
                                  <factor>
                                    <primary>
                                      <atom>
                                        <integer literal>
                                        </integer literal>
                                      </atom>
                                    </primary>
                                  </factor>
                                </term>
                              </comparison>
                            </not test>
                          </and test>
                        </expr>
                        <suite>
  35:              print(line_buf)
                          <stmt>
                            <expr stmt>
                              <expr>
                                <and test>
                                  <not test>
                                    <comparison>
                                      <term>
                                        <factor>
                                          <primary>
                                            <atom>
                                              <name>
                                              </name>
                                            </atom>
                                            <primary suffix>
                                              <arguments>
                                                <expr>
                                                  <and test>
                                                    <not test>
                                                      <comparison>
                                                        <term>
                                                          <factor>
                                                            <primary>
                                                              <atom>
                                                                <name>
                                                                </name>
                                                              </atom>
                                                            </primary>
                                                          </factor>
                                                        </term>
                                                      </comparison>
                                                    </not test>
                                                  </and test>
                                                </expr>
                                              </arguments>
                                            </primary suffix>
                                          </primary>
                                        </factor>
                                      </term>
                                    </comparison>
                                  </not test>
                                </and test>
                              </expr>
                            </expr stmt>
                          </stmt>
  36:              line_buf = ''
                          <stmt>
                            <assignment>
                              <name>
                              </name>
                              <expr>
                                <and test>
                                  <not test>
                                    <comparison>
                                      <term>
                                        <factor>
                                          <primary>
                                            <atom>
                                              <string literal>
                                              </string literal>
                                            </atom>
                                          </primary>
                                        </factor>
                                      </term>
                                    </comparison>
                                  </not test>
                                </and test>
                              </expr>
                            </assignment>
                          </stmt>
  37:           line_buf = line_buf + w4(i)
                        </suite>
                      </if stmt>
                    </stmt>
                    <stmt>
                      <assignment>
                        <name>
                        </name>
                        <expr>
                          <and test>
                            <not test>
                              <comparison>
                                <term>
                                  <factor>
                                    <primary>
                                      <atom>
                                        <name>
                                        </name>
                                      </atom>
                                    </primary>
                                  </factor>
                                  <term opr>
                                  </term opr>
                                  <factor>
                                    <primary>
                                      <atom>
                                        <name>
                                        </name>
                                      </atom>
                                      <primary suffix>
                                        <arguments>
                                          <expr>
                                            <and test>
                                              <not test>
                                                <comparison>
                                                  <term>
                                                    <factor>
                                                      <primary>
                                                        <atom>
                                                          <name>
                                                          </name>
                                                        </atom>
                                                      </primary>
                                                    </factor>
                                                  </term>
                                                </comparison>
                                              </not test>
                                            </and test>
                                          </expr>
                                        </arguments>
                                      </primary suffix>
                                    </primary>
                                  </factor>
                                </term>
                              </comparison>
                            </not test>
                          </and test>
                        </expr>
                      </assignment>
                    </stmt>
  38:           n_printed = n_printed + 1
                    <stmt>
                      <assignment>
                        <name>
                        </name>
                        <expr>
                          <and test>
                            <not test>
                              <comparison>
                                <term>
                                  <factor>
                                    <primary>
                                      <atom>
                                        <name>
                                        </name>
                                      </atom>
                                    </primary>
                                  </factor>
                                  <term opr>
                                  </term opr>
                                  <factor>
                                    <primary>
                                      <atom>
                                        <integer literal>
                                        </integer literal>
                                      </atom>
                                    </primary>
                                  </factor>
                                </term>
                              </comparison>
                            </not test>
                          </and test>
                        </expr>
                      </assignment>
                    </stmt>
  39:        i = i+1
                  </suite>
                </if stmt>
              </stmt>
              <stmt>
                <assignment>
                  <name>
                  </name>
                  <expr>
                    <and test>
                      <not test>
                        <comparison>
                          <term>
                            <factor>
                              <primary>
                                <atom>
                                  <name>
                                  </name>
                                </atom>
                              </primary>
                            </factor>
                            <term opr>
                            </term opr>
                            <factor>
                              <primary>
                                <atom>
                                  <integer literal>
                                  </integer literal>
                                </atom>
                              </primary>
                            </factor>
                          </term>
                        </comparison>
                      </not test>
                    </and test>
                  </expr>
                </assignment>
              </stmt>
  40:     print(line_buf)
            </suite>
          </while stmt>
        </stmt>
        <stmt>
          <expr stmt>
            <expr>
              <and test>
                <not test>
                  <comparison>
                    <term>
                      <factor>
                        <primary>
                          <atom>
                            <name>
                            </name>
                          </atom>
                          <primary suffix>
                            <arguments>
                              <expr>
                                <and test>
                                  <not test>
                                    <comparison>
                                      <term>
                                        <factor>
                                          <primary>
                                            <atom>
                                              <name>
                                              </name>
                                            </atom>
                                          </primary>
                                        </factor>
                                      </term>
                                    </comparison>
                                  </not test>
                                </and test>
                              </expr>
                            </arguments>
                          </primary suffix>
                        </primary>
                      </factor>
                    </term>
                  </comparison>
                </not test>
              </and test>
            </expr>
          </expr stmt>
        </stmt>
  41: 
  42: 
  43: find_primes()
      </suite>
    </func def>
  </stmt>
  <stmt>
    <expr stmt>
      <expr>
        <and test>
          <not test>
            <comparison>
              <term>
                <factor>
                  <primary>
                    <atom>
                      <name>
                      </name>
                    </atom>
                    <primary suffix>
                      <arguments>
                      </arguments>
                    </primary suffix>
                  </primary>
                </factor>
              </term>
            </comparison>
          </not test>
        </and test>
      </expr>
    </expr stmt>
  </stmt>
  44: list_primes()
  <stmt>
    <expr stmt>
      <expr>
        <and test>
          <not test>
            <comparison>
              <term>
                <factor>
                  <primary>
                    <atom>
                      <name>
                      </name>
                    </atom>
                    <primary suffix>
                      <arguments>
                      </arguments>
                    </primary suffix>
                  </primary>
                </factor>
              </term>
            </comparison>
          </not test>
        </and test>
      </expr>
    </expr stmt>
  </stmt>
</program>
PP> n = 1000
PP> primes = [True] * (n + 1)
PP> def find_primes ():
PP>   i1 = 2
PP>   while i1 <= n:
PP>     i2 = 2 * i1
PP>     while i2 <= n:
PP>       primes[i2] = False
PP>       i2 = i2 + i1
PP>     i1 = i1 + 1
PP> 
PP> def w4 (n):
PP>   if n <= 9:
PP>     return "   " + str(n)
PP>   elif n <= 99:
PP>     return "  " + str(n)
PP>   elif n <= 999:
PP>     return " " + str(n)
PP>   else:
PP>     return str(n)
PP> 
PP> def list_primes ():
PP>   n_printed = 0
PP>   line_buf = ""
PP>   i = 2
PP>   while i <= n:
PP>     if primes[i]:
PP>       if n_printed > 0 and n_printed % 10 == 0:
PP>         print(line_buf)
PP>         line_buf = ""
PP>       line_buf = line_buf + w4(i)
PP>       n_printed = n_printed + 1
PP>     i = i + 1
PP>   print(line_buf)
PP> 
PP> find_primes()
PP> list_primes()
